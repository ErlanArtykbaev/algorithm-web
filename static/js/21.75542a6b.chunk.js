(this["webpackJsonpalgorithm-web"]=this["webpackJsonpalgorithm-web"]||[]).push([[21],{250:function(e,t,a){e.exports=a.p+"static/media/sorting.67fb36f1.webp"},251:function(e,t,a){e.exports=a.p+"static/media/unstable-sorting.336d469b.webp"},252:function(e,t,a){e.exports=a.p+"static/media/stable-sorting.fcb6f29f.webp"},36:function(e,t,a){"use strict";var i=a(0),n=a.n(i);t.a=function(e){return n.a.createElement("div",{className:"image-wrapper"},n.a.createElement("img",{className:e.size,src:e.url,alt:e.url}),n.a.createElement("div",{className:"image-bottom"},e.text))}},685:function(e,t,a){"use strict";a.r(t);var i=a(0),n=a.n(i),r=a(711),l=a(36),o=a(250),s=a.n(o),m=a(251),c=a.n(m),p=a(252),u=a.n(p);t.default=function(){return n.a.createElement("div",{className:"container"},n.a.createElement("h3",{className:"title"},"Sorting"),n.a.createElement("p",null,"A sorting algorithm is used to arrange elements of an array/list in a specific order. For example,"),n.a.createElement(l.a,{url:s.a,text:"Sorting an array",size:"md"}),n.a.createElement("p",null,"Here, we are sorting the array in ascending order."),n.a.createElement("p",null,"There are various sorting algorithms that can be used to complete this operation. And, we can use any algorithm based on the requirement."),n.a.createElement("div",{className:"divider"}),n.a.createElement("h3",{className:"sub-title"},"Different Sorting Algorithms"),n.a.createElement("ul",null,n.a.createElement("li",null,"Bubble Sort"),n.a.createElement("li",null,"Selection Sort"),n.a.createElement("li",null,"Quicksort"),n.a.createElement("li",null,"Merge Sort"),n.a.createElement("li",null,"Insertion Sort")),n.a.createElement("div",{className:"divider"}),n.a.createElement("h3",{className:"sub-title"},"Complexity of Sorting Algorithms"),n.a.createElement("p",null,"The efficiency of any sorting algorithm is determined by the time complexity and space complexity of the algorithm."),n.a.createElement("p",null,n.a.createElement("strong",null,"1. Time Complexity:")," Time complexity refers to the time taken by an algorithm to complete its execution with respect to the size of the input. It can be represented in different forms:"),n.a.createElement("p",null,"Big-O notation (O)"),n.a.createElement("p",null,n.a.createElement("strong",null,"2. Space Complexity:")," Space complexity refers to the total amount of memory used by the algorithm for a complete execution. It includes both the auxiliary memory and the input."),n.a.createElement("p",null,"The auxiliary memory is the additional space occupied by the algorithm apart from the input data. Usually, auxiliary memory is considered for calculating the space complexity of an algorithm."),n.a.createElement("p",null,"Let's see a complexity analysis of different sorting algorithms."),n.a.createElement(r.a,{dataSource:[{key:"1",name:"Bubble Sort","time-best":"n","time-worst":"n2","time-average":"n2",space:"1"},{key:"2",name:"Selection Sort","time-best":"n2","time-worst":"n2","time-average":"n2",space:"1"},{key:"3",name:"Insertion Sort","time-best":"n","time-worst":"n2","time-average":"n2",space:"1"},{key:"4",name:"Merge Sort","time-best":"n log n","time-worst":"n log n","time-average":"n log n",space:"n"},{key:"5",name:"Quick Sort","time-best":"n log n","time-worst":"n2","time-average":"n log n",space:"log n"}],columns:[{title:"Sorting Algorithm",dataIndex:"name",key:"name"},{title:"Time Complexity - Best",dataIndex:"time-best",key:"time-best"},{title:"Time Complexity - Worst",dataIndex:"time-worst",key:"time-worst"},{title:"Time Complexity - Average",dataIndex:"time-average",key:"time-average"},{title:"Space Complexity",dataIndex:"space",key:"space"}]}),n.a.createElement("div",{className:"divider"}),n.a.createElement("h3",{className:"sub-title"},"Stability of Sorting Algorithm"),n.a.createElement("p",null,"A sorting algorithm is considered stable if the two or more items with the same value maintain the same relative positions even after sorting."),n.a.createElement("p",null,"For example, in the image below, there are two items with the same value 3. An unstable sorting algorithm allows two possibilities where the two positions of 3 may or may not be maintained."),n.a.createElement(l.a,{url:c.a,text:"Unstable sorting with two possible outcomes",size:"md"}),n.a.createElement("p",null,"However, after a stable sorting algorithm, there is always one possibility where the positions are maintained as in the original array."),n.a.createElement(l.a,{url:u.a,text:"Stable sorting with the positions preserved",size:"md"}))}}}]);
//# sourceMappingURL=21.75542a6b.chunk.js.map