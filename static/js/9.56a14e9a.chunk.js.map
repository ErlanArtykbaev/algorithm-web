{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","containers/algorythms/Sort/Algorithms/MergeSort.js","containers/algorythms/Sort/Algorithms/QuickSort.js","containers/algorythms/Sort/Algorithms/SelectionSort.js","containers/algorythms/Sort/Algorithms/BubbleSort.js","containers/algorythms/Sort/SortingVisualizer.js","containers/algorythms/Sort/Algorithms/InsertionSort.js","components/pages/Sort/SortingVisualizer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","getMergeSortAnimations","array","animations","auxillaryArray","mergeSort","startIndex","endIndex","middleIndex","Math","floor","sortArray","j","merge","javaScriptSortedArray","sort","a","b","console","log","firstArray","secondArray","arraysAreEqual","getQuickSortAnimations","quickSort","pivotIndex","pivot","swap","partitionArray","firstIndex","secondIndex","temp","getSelectionSortAnimations","N","minIndex","selectionSort","getBubbleSortAnimations","bubbleSort","WINDOW_WIDTH","window","innerWidth","WINDOW_HEIGHT","innerHeight","NUMBER_OF_ARRAY_BARS","parseInt","onresize","ENABLED_BUTTON","SortingVisualizer","props","state","this","resetArray","min","max","random","setState","restoreStoreButtons","document","getElementById","disabled","buttonStyle","style","title","cursor","background","disableSortButtons","isColorChange","arrayBars","getElementsByClassName","barOneIndex","barTwoIndex","color","barOneStyle","barTwoStyle","setTimeout","backgroundColor","barOneIdx","newHeight","height","RESTORE_TIME","barIndex","barStyle","key","insertionSort","getInsertionSortAnimations","className","map","idx","onClick","id","React","Component","_classCallCheck","instance","Constructor","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_typeof","obj","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","result","Super","NewTarget","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create"],"mappings":"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","file":"static/js/9.56a14e9a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export function getMergeSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    mergeSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction mergeSort(auxillaryArray, startIndex, endIndex, animations) {\n    if(startIndex === endIndex)\n        return;\n    const middleIndex = Math.floor((startIndex + endIndex)/2);\n    mergeSort(auxillaryArray, startIndex, middleIndex, animations);\n    mergeSort(auxillaryArray, middleIndex + 1, endIndex, animations);\n    merge(auxillaryArray, startIndex, middleIndex, endIndex, animations);\n}\n\nfunction merge(auxillaryArray, startIndex, middleIndex, endIndex, animations) {\n    let sortArray = [];\n    let i = startIndex;\n    let j = middleIndex + 1;\n    while(i <= middleIndex && j <= endIndex) {\n        //Comparing value at ith and jth index so push them to change their color\n        animations.push([i, j]);\n        //By changing color we imply that we are comparing those two values and then again we should revert back to their original color so push them again\n        animations.push([i, j]);\n        if(auxillaryArray[i] <= auxillaryArray[j]) {\n            //We should overwrite the value at (i+startIndex)th index with ith index so push them to highlight swap their heights\n            animations.push([sortArray.length + startIndex, auxillaryArray[i]]);\n            sortArray.push(auxillaryArray[i++]);\n        }\n        else {\n            //We should overwrite the value at (i+startIndex)th index with jth index so push them to highlight swap their heights\n            animations.push([sortArray.length + startIndex, auxillaryArray[j]]);\n            sortArray.push(auxillaryArray[j++]);\n        }\n    }\n    while(i <= middleIndex) {\n        animations.push([i, i]);\n        animations.push([i, i]);\n        animations.push([sortArray.length + startIndex, auxillaryArray[i]]);\n        sortArray.push(auxillaryArray[i++]);\n    }\n    while(j <= endIndex) {\n        animations.push([j, j]);\n        animations.push([j, j]);\n        animations.push([sortArray.length + startIndex, auxillaryArray[j]]);\n        sortArray.push(auxillaryArray[j++]);\n    }\n    for (let i = startIndex; i <= endIndex; i++) {\n        auxillaryArray[i] = sortArray[i - startIndex];\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getQuickSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\ngetQuickSortAnimations([7,2,1,6]);\n\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\n    let pivotIndex;\n    if (startIndex < endIndex) {\n        pivotIndex = partitionArray(auxillaryArray, startIndex, endIndex, animations);\n        quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n        quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n    }\n}\n\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\n    let pivot = auxillaryArray[endIndex];\n    let pivotIndex = startIndex;\n    for (let i = startIndex; i <= endIndex - 1; i++) {\n        animations.push([i, endIndex]);\n        animations.push([i, endIndex]);\n        if (auxillaryArray[i] <= pivot) {\n            //Swap these two heights\n            animations.push([i, auxillaryArray[pivotIndex]]);\n            animations.push([pivotIndex, auxillaryArray[i]]);\n            swap(auxillaryArray, i , pivotIndex);\n            pivotIndex++;\n        }\n        else {\n            animations.push([-1, -1]);\n            animations.push([-1, -1]);\n        }\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    //Swap these two heights\n    animations.push([pivotIndex, auxillaryArray[endIndex]]);\n    animations.push([endIndex, auxillaryArray[pivotIndex]]);\n    swap(auxillaryArray, pivotIndex, endIndex);\n    return pivotIndex;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getSelectionSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    selectionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction selectionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        let minIndex = i; //Finding minimum element in unsorted array\n        for (let j = i + 1; j < N; j++) {\n            animations.push([\"comparision1\", j, minIndex]);\n            animations.push([\"comparision2\", j, minIndex]);\n            if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n                minIndex = j;\n            }\n        }\n        animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n        animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n        // Swap the found minimum element with the first element\n        swap(auxillaryArray, minIndex, i);\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","export function getBubbleSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    bubbleSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        for (let j = 0; j < N - i -1; j++) {\n            animations.push([j, j + 1]);\n            animations.push([j, j + 1]);\n            if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n                animations.push([j, auxillaryArray[j + 1]]);\n                animations.push([j + 1, auxillaryArray[j]]);\n                swap(auxillaryArray, j, j + 1);\n            }\n            else {\n                animations.push([-1, -1]);\n                animations.push([-1, -1]);\n            }\n        }\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","import React from \"react\";\nimport { getMergeSortAnimations } from \"./Algorithms/MergeSort\";\nimport { getQuickSortAnimations } from \"./Algorithms/QuickSort\";\nimport { getInsertionSortAnimations } from \"./Algorithms/InsertionSort\";\nimport { getSelectionSortAnimations } from \"./Algorithms/SelectionSort\";\nimport { getBubbleSortAnimations } from \"./Algorithms/BubbleSort\";\n//Changing width,height accordingly with the browser\nlet WINDOW_WIDTH = window.innerWidth;\nlet WINDOW_HEIGHT = window.innerHeight / 2;\nlet NUMBER_OF_ARRAY_BARS = parseInt((WINDOW_WIDTH - 200) / 8);\n\nfunction reportWindowSize() {\n  WINDOW_WIDTH = window.innerWidth;\n  WINDOW_HEIGHT = window.innerHeight;\n  NUMBER_OF_ARRAY_BARS = parseInt((WINDOW_WIDTH - 200) / 8);\n}\n\nwindow.onresize = reportWindowSize; //TBD -> find a way to update state also when resized\n\nconst PRIMARY_COLOR = \"#1890ff\"; //Normal color of bars\nconst SECONDARY_COLOR = \"red\"; //Color of bars when they are being compared\nconst ANIMATION_SPEED_MS = 10; //Animation Speed (how fast color changes, how fast height gets overwritten)\n\n//Tooltips for buttons\nconst DISABLED_BUTTON = \"Currently Disabled\";\nconst ENABLED_BUTTON = {\n  nlogn: \"O(NlogN) Time Complexity\",\n  nSquare: \"O(N^2) Time Complexity\",\n};\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  //Generates new random array\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(25, WINDOW_HEIGHT - 30));\n    }\n    this.setState({ array: array });\n    this.restoreStoreButtons();\n  }\n\n  disableSortButtons() {\n    document.getElementById(\"mergeSort\").disabled = true;\n    let buttonStyle = document.getElementById(\"mergeSort\").style;\n    document.getElementById(\"mergeSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"quickSort\").disabled = true;\n    buttonStyle = document.getElementById(\"quickSort\").style;\n    document.getElementById(\"quickSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"insertionSort\").disabled = true;\n    buttonStyle = document.getElementById(\"insertionSort\").style;\n    document.getElementById(\"insertionSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"selectionSort\").disabled = true;\n    buttonStyle = document.getElementById(\"selectionSort\").style;\n    document.getElementById(\"selectionSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"bubbleSort\").disabled = true;\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\n    document.getElementById(\"bubbleSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n  }\n\n  restoreStoreButtons() {\n    document.getElementById(\"mergeSort\").disabled = false;\n    let buttonStyle = document.getElementById(\"mergeSort\").style;\n    document.getElementById(\"mergeSort\").title = ENABLED_BUTTON.nlogn;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"quickSort\").disabled = false;\n    buttonStyle = document.getElementById(\"quickSort\").style;\n    document.getElementById(\"quickSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"bubbleSort\").disabled = false;\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\n    document.getElementById(\"bubbleSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"selectionSort\").disabled = false;\n    buttonStyle = document.getElementById(\"selectionSort\").style;\n    document.getElementById(\"selectionSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"insertionSort\").disabled = false;\n    buttonStyle = document.getElementById(\"insertionSort\").style;\n    document.getElementById(\"insertionSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n  }\n\n  //Sorting Algorithms\n  mergeSort() {\n    this.disableSortButtons();\n    const [animations] = getMergeSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        //If we don't multiply by the index then every animations[i] wait for exactly ANIMATION_SPEED_MS and immediately change into final state\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n    // this.setState({array: sortArray})\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n  }\n\n  quickSort() {\n    this.disableSortButtons();\n    const [animations] = getQuickSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length - 1; i++) {\n      const isColorChange = i % 6 === 0 || i % 6 === 1;\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color = i % 6 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        if (barOneIndex === -1) {\n          continue;\n        }\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n    // this.setState({array: sortArray})\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n  }\n\n  bubbleSort() {\n    this.disableSortButtons();\n    const [animations] = getBubbleSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n    // this.setState({array: sortArray})\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n  }\n\n  insertionSort() {\n    this.disableSortButtons();\n    const [animations] = getInsertionSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n    // this.setState({array: sortArray})\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n  }\n\n  selectionSort() {\n    this.disableSortButtons();\n    const [animations] = getSelectionSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n    // this.setState({array: sortArray})\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => this.restoreStoreButtons(), RESTORE_TIME);\n  }\n\n  render() {\n    const array = this.state.array;\n    const SORT_BUTTONS = 6;\n    const TOTAL_BUTTONS = 1 + SORT_BUTTONS;\n    return (\n      <div>\n        <div className=\"array-container\">\n          {array.map((value, idx) => (\n            <div\n              className=\"array-bar\"\n              key={idx}\n              style={{\n                backgroundColor: PRIMARY_COLOR,\n                height: `${value}px`,\n              }}>\n              {\" \"}\n            </div>\n          ))}\n        </div>\n        <div className=\"buttons\">\n          <button\n            title=\"Generates a new random array\"\n            onClick={() => this.resetArray()}>\n            Generate New Array\n          </button>\n          <button\n            title=\"O(NlogN) Time Complexity\"\n            id=\"mergeSort\"\n            onClick={() => this.mergeSort()}>\n            Merge Sort\n          </button>\n          <button\n            title=\"O(N^2) Time Complexity\"\n            id=\"quickSort\"\n            onClick={() => this.quickSort()}>\n            Quick Sort\n          </button>\n          <button\n            title=\"O(N^2) Time Complexity\"\n            id=\"bubbleSort\"\n            onClick={() => this.bubbleSort()}>\n            Bubble Sort\n          </button>\n          <button\n            title=\"O(N^2) Time Complexity\"\n            id=\"insertionSort\"\n            onClick={() => this.insertionSort()}>\n            Insertion Sort\n          </button>\n          <button\n            title=\"O(N^2) Time Complexity\"\n            id=\"selectionSort\"\n            onClick={() => this.selectionSort()}>\n            Selection Sort\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingVisualizer;\n","export function getInsertionSortAnimations(array) {\n    let animations  = [];\n    let auxillaryArray = array.slice();\n    insertionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction insertionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 1; i < N; i++) {\n        let key = auxillaryArray[i];\n        let j = i - 1;\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n        while(j >= 0 && auxillaryArray[j] > key) {\n            animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n            auxillaryArray[j + 1] = auxillaryArray[j];\n            j = j - 1;\n            if(j >= 0) {\n                animations.push([\"comparision1\", j, i]);\n                animations.push([\"comparision2\", j, i]);\n            }     \n        }\n        animations.push([\"overwrite\", j + 1, key]);\n        auxillaryArray[j + 1] = key;\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n      if (firstArray[i] !== secondArray[i]) {\n        return false;\n      }\n    }\n    return true;\n}","import React from \"react\";\n\nimport SortingVisualizerAlgorithm from \"../../../containers/algorythms/Sort/SortingVisualizer\";\n\nconst SortingVisualizer = () => {\n  return (\n    <div className=\"container\">\n      <h3 className=\"title\">Sort algorithms visualization</h3>\n      <SortingVisualizerAlgorithm />\n    </div>\n  );\n};\n\nexport default SortingVisualizer;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}