{"version":3,"sources":["assets/img/linked-list/linked-list-concept.webp","components/layer/ImageWrapper.js","components/layer/CodePreview.js","components/pages/Lists/SinglyList.js"],"names":["module","exports","ImageWrapper","props","className","size","src","url","alt","text","CodePreview","code","language","style","docco","SinglyList","first"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kD,gCCA3C,oBAWeC,IATM,SAACC,GACpB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAWD,EAAME,KAAMC,IAAKH,EAAMI,IAAKC,IAAKL,EAAMI,MACvD,yBAAKH,UAAU,gBAAgBD,EAAMM,S,gCCN3C,sCAeeC,IAVK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3B,OACE,yBAAKR,UAAU,QACb,kBAAC,IAAD,CAAmBQ,SAAUA,EAAUC,MAAOC,KAC3CH,M,iCCTT,6DA2EeI,UArEI,WACjB,OACE,yBAAKX,UAAU,aACb,wBAAIA,UAAU,SAAd,wCACA,uJAKA,0IAIA,2EACA,4BACE,kDACA,mDAEF,yBAAKA,UAAU,YACf,wBAAIA,UAAU,aAAd,sBACA,wGAIA,kBAAC,IAAD,CAAcC,KAAK,MAAME,IAAKS,IAAOP,KAAK,uBAC1C,sDACA,kBAAC,IAAD,CACEE,KAAI,wGAMJC,SAAS,MAEX,mFAEA,kBAAC,IAAD,CACED,KAAI,+pBAyBJC,SAAS","file":"static/js/24.d60d6b46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linked-list-concept.41859ec7.webp\";","import React from \"react\"\n\nconst ImageWrapper = (props) => {\n  return (\n    <div className='image-wrapper'>\n      <img className={props.size} src={props.url} alt={props.url} />\n      <div className='image-bottom'>{props.text}</div>\n    </div>\n  )\n}\n\nexport default ImageWrapper\n","import React from \"react\"\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\"\n\nconst CodePreview = ({ code, language }) => {\n  return (\n    <div className='Code'>\n      <SyntaxHighlighter language={language} style={docco}>\n        {code}\n      </SyntaxHighlighter>\n    </div>\n  )\n}\n\nexport default CodePreview\n","import React from \"react\"\n\nimport first from \"../../../assets/img/linked-list/linked-list-concept.webp\"\nimport CodePreview from \"../../layer/CodePreview\"\nimport ImageWrapper from \"../../layer/ImageWrapper\"\n\nconst SinglyList = () => {\n  return (\n    <div className='container'>\n      <h3 className='title'>Types of Linked List - Singly linked</h3>\n      <p>\n        In this tutorial, you will learn different types of linked list. Also,\n        you will find implementation of linked list in C.\n      </p>\n\n      <p>\n        Before you learn about the type of the linked list, make sure you know\n        about the LinkedList Data Structure.\n      </p>\n      <p>There are three common types of Linked List.</p>\n      <ul>\n        <li>Singly Linked List</li>\n        <li>Doubly Linked List</li>\n      </ul>\n      <div className='divider'></div>\n      <h3 className='sub-title'>Singly Linked List</h3>\n      <p>\n        It is the most common. Each node has data and a pointer to the next\n        node.\n      </p>\n      <ImageWrapper size='big' url={first} text='Singly linked list' />\n      <p>Node is represented as:</p>\n      <CodePreview\n        code={`\n          struct node {\n            int data;\n            struct node *next;\n          }\n      `}\n        language='c'\n      />\n      <p>A three-member singly linked list can be created as:</p>\n\n      <CodePreview\n        code={`\n        /* Initialize nodes */\n        struct node *head;\n        struct node *one = NULL;\n        struct node *two = NULL;\n        struct node *three = NULL;\n        \n        /* Allocate memory */\n        one = malloc(sizeof(struct node));\n        two = malloc(sizeof(struct node));\n        three = malloc(sizeof(struct node));\n        \n        /* Assign data values */\n        one->data = 1;\n        two->data = 2;\n        three->data = 3;\n        \n        /* Connect nodes */\n        one->next = two;\n        two->next = three;\n        three->next = NULL;\n        \n        /* Save address of first node in head */\n        head = one;\n      `}\n        language='c'\n      />\n    </div>\n  )\n}\n\nexport default SinglyList\n"],"sourceRoot":""}