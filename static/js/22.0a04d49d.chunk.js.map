{"version":3,"sources":["components/layer/ImageWrapper.js","components/layer/CodePreview.js","assets/img/linked-list/doubly-linked-list-concept.webp","components/pages/Lists/DoubleList.js"],"names":["ImageWrapper","props","className","size","src","url","alt","text","CodePreview","code","language","style","docco","module","exports","DoublyList","first"],"mappings":"sHAAA,oBAWeA,IATM,SAACC,GACpB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAWD,EAAME,KAAMC,IAAKH,EAAMI,IAAKC,IAAKL,EAAMI,MACvD,yBAAKH,UAAU,gBAAgBD,EAAMM,S,gCCN3C,sCAeeC,IAVK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3B,OACE,yBAAKR,UAAU,QACb,kBAAC,IAAD,CAAmBQ,SAAUA,EAAUC,MAAOC,KAC3CH,M,oBCTTI,EAAOC,QAAU,IAA0B,yD,iCCA3C,6DAkEeC,UA5DI,WACjB,OACE,yBAAKb,UAAU,aACb,wBAAIA,UAAU,SAAd,wCACA,uJAIA,kBAAC,IAAD,CAAcC,KAAK,MAAME,IAAKW,IAAOT,KAAK,uBAC1C,uDACA,kBAAC,IAAD,CACEE,KAAI,oJAOJC,SAAS,MAEX,kFACA,kBAAC,IAAD,CACED,KAAI,8zBA8BJC,SAAS,MAGX,yBAAKR,UAAU","file":"static/js/22.0a04d49d.chunk.js","sourcesContent":["import React from \"react\"\n\nconst ImageWrapper = (props) => {\n  return (\n    <div className='image-wrapper'>\n      <img className={props.size} src={props.url} alt={props.url} />\n      <div className='image-bottom'>{props.text}</div>\n    </div>\n  )\n}\n\nexport default ImageWrapper\n","import React from \"react\"\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\"\n\nconst CodePreview = ({ code, language }) => {\n  return (\n    <div className='Code'>\n      <SyntaxHighlighter language={language} style={docco}>\n        {code}\n      </SyntaxHighlighter>\n    </div>\n  )\n}\n\nexport default CodePreview\n","module.exports = __webpack_public_path__ + \"static/media/doubly-linked-list-concept.700756a7.webp\";","import React from \"react\"\nimport ImageWrapper from \"../../layer/ImageWrapper\"\n\nimport first from \"../../../assets/img/linked-list/doubly-linked-list-concept.webp\"\nimport CodePreview from \"../../layer/CodePreview\"\n\nconst DoublyList = () => {\n  return (\n    <div className='container'>\n      <h3 className='title'>Types of Linked List - Doubly linked</h3>\n      <p>\n        We add a pointer to the previous node in a doubly-linked list. Thus, we\n        can go in either direction: forward or backward.\n      </p>\n      <ImageWrapper size='big' url={first} text='Doubly linked list' />\n      <p>A node is represented as</p>\n      <CodePreview\n        code={`\n            struct node {\n              int data;\n              struct node *next;\n              struct node *prev;\n            }\n        `}\n        language='c'\n      />\n      <p>A three-member doubly linked list can be created as</p>\n      <CodePreview\n        code={`\n          /* Initialize nodes */\n          struct node *head;\n          struct node *one = NULL;\n          struct node *two = NULL;\n          struct node *three = NULL;\n          \n          /* Allocate memory */\n          one = malloc(sizeof(struct node));\n          two = malloc(sizeof(struct node));\n          three = malloc(sizeof(struct node));\n          \n          /* Assign data values */\n          one->data = 1;\n          two->data = 2;\n          three->data = 3;\n          \n          /* Connect nodes */\n          one->next = two;\n          one->prev = NULL;\n          \n          two->next = three;\n          two->prev = one;\n          \n          three->next = NULL;\n          three->prev = two;\n          \n          /* Save address of first node in head */\n          head = one;\n        `}\n        language='c'\n      />\n\n      <div className='divider'></div>\n    </div>\n  )\n}\n\nexport default DoublyList\n"],"sourceRoot":""}