(this["webpackJsonpalgorithm-web"]=this["webpackJsonpalgorithm-web"]||[]).push([[24],{188:function(e,t,n){e.exports=n.p+"static/media/linked-list-concept.41859ec7.webp"},36:function(e,t,n){"use strict";var a=n(0),l=n.n(a);t.a=function(e){return l.a.createElement("div",{className:"image-wrapper"},l.a.createElement("img",{className:e.size,src:e.url,alt:e.url}),l.a.createElement("div",{className:"image-bottom"},e.text))}},37:function(e,t,n){"use strict";var a=n(0),l=n.n(a),i=n(731),r=n(700);t.a=function(e){var t=e.code,n=e.language;return l.a.createElement("div",{className:"Code"},l.a.createElement(i.a,{language:n,style:r.a},t))}},717:function(e,t,n){"use strict";n.r(t);var a=n(0),l=n.n(a),i=n(188),r=n.n(i),s=n(37),o=n(36);t.default=function(){return l.a.createElement("div",{className:"container"},l.a.createElement("h3",{className:"title"},"Types of Linked List - Singly linked"),l.a.createElement("p",null,"In this tutorial, you will learn different types of linked list. Also, you will find implementation of linked list in C."),l.a.createElement("p",null,"Before you learn about the type of the linked list, make sure you know about the LinkedList Data Structure."),l.a.createElement("p",null,"There are three common types of Linked List."),l.a.createElement("ul",null,l.a.createElement("li",null,"Singly Linked List"),l.a.createElement("li",null,"Doubly Linked List")),l.a.createElement("div",{className:"divider"}),l.a.createElement("h3",{className:"sub-title"},"Singly Linked List"),l.a.createElement("p",null,"It is the most common. Each node has data and a pointer to the next node."),l.a.createElement(o.a,{size:"big",url:r.a,text:"Singly linked list"}),l.a.createElement("p",null,"Node is represented as:"),l.a.createElement(s.a,{code:"\n          struct node {\n            int data;\n            struct node *next;\n          }\n      ",language:"c"}),l.a.createElement("p",null,"A three-member singly linked list can be created as:"),l.a.createElement(s.a,{code:"\n        /* Initialize nodes */\n        struct node *head;\n        struct node *one = NULL;\n        struct node *two = NULL;\n        struct node *three = NULL;\n        \n        /* Allocate memory */\n        one = malloc(sizeof(struct node));\n        two = malloc(sizeof(struct node));\n        three = malloc(sizeof(struct node));\n        \n        /* Assign data values */\n        one->data = 1;\n        two->data = 2;\n        three->data = 3;\n        \n        /* Connect nodes */\n        one->next = two;\n        two->next = three;\n        three->next = NULL;\n        \n        /* Save address of first node in head */\n        head = one;\n      ",language:"c"}))}}}]);
//# sourceMappingURL=24.d60d6b46.chunk.js.map